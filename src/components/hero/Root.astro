---
import { Separator } from "@/components/ui/Separator";

import * as Download from "@/components/download";
import type { HTMLAttributes } from "astro/types";
import { cn } from "@/lib/utils";

interface Props extends HTMLAttributes<"div"> {
  withParallax?: boolean;
}

const { class: className, withParallax = false, ...props } = Astro.props;
---

<site-hero data-parallax={withParallax}>
  <section
    class="from-sand-storm/20 relative overflow-hidden bg-gradient-to-tl"
  >
    <div
      {...props}
      class={cn(
        "container grid grid-cols-3 items-center max-lg:grid-cols-1 lg:gap-16",
        className,
      )}
    >
      <header
        class="col-span-2 w-full max-w-2xl space-y-8 pt-64 pb-32 max-lg:pb-16"
      >
        <slot name="title" />
        <slot name="subtitle" />

        <Separator className="w-full" />

        <Download.Root>
          <Download.Title>Download for your device</Download.Title>
          <Download.Description>
            Scan the QR code to download for your device
          </Download.Description>
        </Download.Root>
      </header>

      <slot name="visual" />
    </div>

    <slot name="background" />
  </section>
</site-hero>

<script>
  import { scroll, animate } from "motion";

  class Hero extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const hero = this.querySelector("section");

      if (hero && this.dataset.parallax === "true") {
        const animation = animate(hero, { y: [0, 300] });

        scroll(animation, {
          offset: ["start start", "end start"],
          target: hero,
        });
      }
    }
  }

  customElements.define("site-hero", Hero);
</script>
