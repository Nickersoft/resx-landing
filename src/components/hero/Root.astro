---
import type { HTMLAttributes } from "astro/types";
import { cn } from "@/lib/utils";

interface Props extends HTMLAttributes<"div"> {
  withParallax?: boolean;
  noDownload?: boolean;
}

const {
  noDownload,
  class: className,
  withParallax = false,
  ...props
} = Astro.props;
---

<site-hero data-parallax={withParallax}>
  <section class="from-sand-storm/20 relative overflow-hidden bg-linear-to-tl">
    <div
      {...props}
      class={cn(
        "container grid grid-cols-3 items-center max-lg:grid-cols-1 lg:gap-16",
        className,
      )}
    >
      <header
        data-slot="hero-header"
        class="col-span-2 w-full max-w-2xl space-y-8 pt-64 pb-32 max-lg:pb-16 max-md:pt-48"
      >
        <slot name="title" />
        <slot name="subtitle" />
        <slot name="cta" />
      </header>

      <slot name="visual" />
    </div>

    <slot name="background" />
  </section>
</site-hero>

<script>
  import { scroll, animate } from "motion";

  class Hero extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const { matches: isMobile } = window.matchMedia("(max-width: 1024px)");

      if (isMobile) return;

      const hero = this.querySelector("section");

      if (hero && this.dataset.parallax === "true") {
        const animation = animate(hero, {
          transform: ["translateY(0)", "translateY(50%)"],
        });

        scroll(animation, {
          offset: ["start start", "end start"],
          target: hero,
        });
      }
    }
  }

  customElements.define("site-hero", Hero);
</script>
